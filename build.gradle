buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
//        springBootVersion = '2.2.0.M4'
//        springRepo = 'http://repo.spring.io/libs-release'
        springRepo = 'http://repo.spring.io/milestone'

    }
    repositories {
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        mavenLocal()
        maven { url springRepo }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.springframework:springloaded:1.2.0.RELEASE'
    }
}


ext {
    environment = "test"
}

if (hasProperty("env")) {
    ext.environment = "$env"
}

ext.env = ext.environment
ext.isProd = { env ->
    return "prod".equals(env.toString()) || "production".equals(env.toString())
}


configure(subprojects) { project ->
    apply plugin: 'checkstyle'
    apply plugin: 'idea'
    apply plugin: "java"

    group "com.github.bootbox"
    version "0.0.1-SNAPSHOT"

    def vJavaLang = '1.8'

    targetCompatibility = vJavaLang
    sourceCompatibility = vJavaLang


    configurations {

        all*.exclude group: 'org.hibernate.validator'

        // use fastjson
//        all*.exclude group: 'com.fasterxml.jackson.core'
//        all*.exclude group: 'com.fasterxml.jackson.datatype'
//        all*.exclude group: 'com.fasterxml.jackson.module'

        // replaced with jcl-over-slf4j
        all*.exclude group: 'commons-logging', module: 'commons-logging'
        // replaced with log4j-over-slf4j
        all*.exclude group: 'log4j', module: 'log4j'
        compile.exclude module: "spring-boot-starter-tomcat"
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    dependencies {
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

        compile group: 'com.google.guava', name: 'guava', version: '25.1-jre'
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.58'
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
        compile group: 'org.jetbrains', name: 'annotations', version: '13.0'
        // vendor

        testCompile 'junit:junit:4.12'
    }


    dependencies {
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

        compile group: 'com.google.guava', name: 'guava', version: '25.1-jre'
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.58'
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
        compile group: 'org.jetbrains', name: 'annotations', version: '13.0'
        // vendor

        testCompile 'junit:junit:4.12'
    }

    def configDir = "${project.rootDir}/config"
    checkstyle {
        toolVersion "8.21"
        configFile file("$configDir/checkstyle/checkstyle.xml")
        configProperties.checkstyleSuppressionsPath = file("$configDir/checkstyle/suppressions.xml").absolutePath
    }

    checkstyleMain {
        source = 'src/main/java'
    }

    checkstyleTest {
        source = 'src/test/java'
    }
}

ext.bootProjects = subprojects.findAll {
     it.name.startsWith("bootbox-sba")
}

configure(bootProjects) { project ->
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: "java"
    apply plugin: 'application'
//    apply from: '../tasks.gradle'

    ext.springJvmArgs = ["-Dspring.profiles.active=$env"]
    ext.appJvmArgs = ext.springJvmArgs + [
            "-Dfile.encoding=UTF-8",
            "-Xlog:gc*",
            "-XX:-OmitStackTraceInFastThrow"]

    if (!isProd(env)) {
        appJvmArgs += ["-noverify"
                       , "-XX:TieredStopAtLevel=1"
                       , "-XX:+AlwaysPreTouch"]
    }
    defaultTasks 'compileJava', 'checkStyle', 'jar'

    distZip.enabled = false
    distTar.enabled = false
    bootDistTar.enabled = false
    bootDistZip.enabled = false

//    processResources.dependsOn copyConfiguration

    dependencies {
//        testCompile "org.springframework:spring-test"
//        testCompile "org.springframework.boot:spring-boot-test"
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

        testCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc'
    }
}

